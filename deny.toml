# cargo-deny configuration file
# https://embarkstudios.github.io/cargo-deny/

[graph]
# The graph table configures how the dependency graph is constructed and thus
# which crates the checks are performed over
targets = [
    { triple = "x86_64-unknown-linux-gnu" },
    { triple = "aarch64-unknown-linux-gnu" },
]
all-features = false
no-default-features = false

[output]
feature-depth = 1

[advisories]
# The advisories section configures handling of security advisories
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]
vulnerability = "deny"
unmaintained = "warn"
yanked = "warn"
notice = "warn"
ignore = [
    # Add specific advisory IDs to ignore here if needed
]

[licenses]
# The licenses section configures licensing compliance
unlicensed = "deny"
# List of explicitly allowed licenses
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "CC0-1.0",
]
# List of explicitly disallowed licenses
deny = ["GPL-2.0", "GPL-3.0", "AGPL-1.0", "AGPL-3.0"]
# Lint level for when multiple versions of the same license are detected
multiple-versions = "warn"
# Confidence threshold for detecting a license from a license text.
# 0.8 means we need to be 80% confident that the detected license is correct
confidence-threshold = 0.8

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlights used when creating dotgraph output.
highlight = "all"
# List of crates that are allowed. Use with care!
allow = []
# List of crates to deny
deny = [
    # Each entry in the deny list can take the form of a string for a crate name,
    # or a map with the crate name and optionally the version constraint and reason
    { name = "openssl", reason = "Use rustls instead" },
]
# Certain crates/versions that will be skipped when doing duplicate detection.
skip = []
# Similarly to `skip` allows you to skip certain crates from being checked.
skip-tree = []

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"
# List of allowed registries
allow-registry = ["https://github.com/rust-lang/crates.io-index"]
# List of allowed Git repositories
allow-git = []
