name: Build and Publish Docker Images

on:
  release:
    types: [published]
  pull_request:
    branches:
      - main
  workflow_run:
    workflows: ["CI Tests"]
    types: [completed]
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: w4ff1e/onvif-media-transcoder

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      (github.event_name == 'release' && github.event.action == 'published') ||
      github.event_name == 'pull_request'
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # Set unstable tag for main branch commits (non-release)
          type=raw,value=unstable,enable={{is_default_branch}}
          # Set semver tags for releases
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # Set latest tag for releases only (not main branch)
          type=raw,value=latest,enable=${{ github.event_name == 'release' }},priority=1000
        flavor: |
          latest=false
        labels: |
          org.opencontainers.image.title=ONVIF Media Transcoder
          org.opencontainers.image.description=Docker-based ONVIF-compatible media transcoder with WS-Discovery
          org.opencontainers.image.vendor=W4ff1e
          org.opencontainers.image.authors=W4ff1e <https://github.com/W4ff1e>
          org.opencontainers.image.url=https://github.com/W4ff1e/onvif-media-transcoder
          org.opencontainers.image.source=https://github.com/W4ff1e/onvif-media-transcoder
          org.opencontainers.image.documentation=https://github.com/W4ff1e/onvif-media-transcoder/blob/main/README.md
          org.opencontainers.image.licenses=MIT

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event_name == 'release' && github.event.release.tag_name || 'unstable' }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  update-readme:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'workflow_run') ||
      (github.event_name == 'release' && github.event.action == 'published')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: ${{ env.IMAGE_NAME }}
        readme-filepath: ./README.md
        short-description: "ONVIF-compatible media transcoder with Docker and WS-Discovery support"
